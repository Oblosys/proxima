\usepackage{latexsym,fleqn,leqno} %\usepackage{gen,latexsym,fleqn,leqno}


\mathindent=4.58em
\mathsurround=0.01em
%----------------- style ----------------
\renewcommand{\phi}{\varphi}
%\renewcommand{\em}{\sl}

\renewcommand{\emph}[1]{{\em #1\/}}
\newenvironment{Proclaim}[1]%
        {\begin{trivlist}\item[]{\sc #1}\,: }%
        {\end{trivlist}}
\newcommand{\EndProof}{\em End of proof.}
\newcommand{\End}{$\Box$\blankline}
\newenvironment{Proof}%
        {\begin{trivlist}\item[]{\em Proof.\/} }%
        {{\em End of proof.}\end{trivlist}}
\newenvironment{Exer}%
        {\begin{Exercise}\rm}%
        {\end{Exercise}}

%%% \newdimen in environment causes latex to run out of dimension space
\newdimen\Proof@stepwidth
\newdimen\Proof@label
%%%%%%%%%%%%% from Frank:
\newcounter{proofstep}
\def\ardlabel#1{\let\@currentlabel=\theproofstep\label{#1}}
\def\Proofstep#1{\refstepcounter{proofstep}(\theproofstep)\ardlabel{#1}}
\def\Proofstepref#1{(\ref{#1})}
\def\Proof@indent{3em}
\def\Proof@opwidth{1.5em}
\def\Proof@opspace{1em}
\newenvironment{Prf}{%
\vspace{1ex}\noindent%
\setcounter{proofstep}{0}%
\tabskip=\Proof@indent%
\let\\\cr%
%\newdimen\Proof@stepwidth\Proof@stepwidth=\hsize		%% Error: \newdimen in env
\Proof@stepwidth=\hsize
\advance\Proof@stepwidth by -\Proof@indent
%\newdimen\Proof@label\Proof@label=-\Proof@stepwidth	%% Error: \newdimen in env
\Proof@label=-\Proof@stepwidth
\advance\Proof@label by -2em
\advance\Proof@stepwidth by -\Proof@opspace
\advance\Proof@stepwidth by -\Proof@opwidth
\halign\bgroup% Martijn: figure out optimal vspaces
  \vspace{1ex}\makebox[\Proof@opwidth]{$##$}\tabskip=\Proof@opspace&%
  \vspace{0ex}\makebox[\Proof@stepwidth][l]{$##$}\tabskip=0pt&%
  \rlap{\kern\Proof@label\makebox[2em][r]{\small##}}&\llap{##}\cr}
{\crcr\egroup\vspace{0ex}}
%%%%%%%%%%%%% end 






%---------------- bare ------------------

\DeclareMathVersion{zed}
\SetMathAlphabet{\mathrm}{zed}{\encodingdefault}{\rmdefault}{m}{n}%
%\SetMathAlphabet{\mathbf}{zed}{\encodingdefault}{\bfdefault}{m}{n}% was commented out
%\SetMathAlphabet{\mathbf}{zed}{\encodingdefault}{\rmdefault}{bx}{n}% was commented out
%\SetMathAlphabet{\mathit}{zed}{\encodingdefault}{\itdefault}{m}{n}% Martijn
\SetMathAlphabet{\mathsf}{zed}{\encodingdefault}{\sfdefault}{m}{n}%
\SetMathAlphabet{\mathtt}{zed}{\encodingdefault}{\ttdefault}{m}{n}%
\DeclareSymbolFont{italics}{\encodingdefault}{\rmdefault}{m}{it}%
\DeclareSymbolFontAlphabet{\mathrm}{operators}
\DeclareSymbolFontAlphabet{\mathit}{letters}
\DeclareSymbolFontAlphabet{\mathcal}{symbols}
\DeclareSymbolFontAlphabet{\bbold}{AMSb}
\DeclareSymbolFont{lasy}{U}{lasy}{m}{n}
\DeclareSymbolFont{AMSa}{U}{msa}{m}{n}
\DeclareSymbolFont{AMSb}{U}{msb}{m}{n}
\let\mho\undefined
\let\Join\undefined
\let\Box\undefined
\let\Diamond\undefined
\let\leadsto\undefined
\let\sqsubset\undefined
\let\sqsupset\undefined
\let\lhd\undefined
\let\unlhd\undefined
\let\rhd\undefined
\let\unrhd\undefined
\DeclareMathSymbol{\mho}{\mathord}{lasy}{"30}
\DeclareMathSymbol{\Join}{\mathrel}{lasy}{"31}
\DeclareMathSymbol{\Box}{\mathord}{lasy}{"32}
\DeclareMathSymbol{\Diamond}{\mathord}{lasy}{"33}
\DeclareMathSymbol{\leadsto}{\mathrel}{lasy}{"3B}
\DeclareMathSymbol{\sqsubset}{\mathrel}{lasy}{"3C}
\DeclareMathSymbol{\sqsupset}{\mathrel}{lasy}{"3D}
\DeclareMathSymbol{\lhd}{\mathrel}{lasy}{"01}
\DeclareMathSymbol{\unlhd}{\mathrel}{lasy}{"02}
\DeclareMathSymbol{\rhd}{\mathrel}{lasy}{"03}
\DeclareMathSymbol{\unrhd}{\mathrel}{lasy}{"04}
\mathversion{zed}

% Martijn: this seems to make text in math mode normal, but somehow \mathit{text} gets math spacing
\def\@setmcodes#1#2#3{{\count0=#1 \count1=#3
    \loop \global\mathcode\count0=\count1 \ifnum \count0<#2
    \advance\count0 by1 \advance\count1 by1 \repeat}}
\@setmcodes{`A}{`Z}{"7\hexnumber@\symitalics41}% 
\@setmcodes{`a}{`z}{"7\hexnumber@\symitalics61}% 

% fix problem by making mathit empty. Don't know what to do if we do want math spacing
\renewcommand{\mathit}[1]{#1}

% what's this? new def of \em?
%\DeclareRobustCommand\em
%        {\@nomath\em \ifdim \fontdimen\@ne\font >\z@
%                       \upshape \else \slshape \fi}
