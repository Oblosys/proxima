-----------------------------------------------------------------------------------------
{-| Module      : ScannerAG.ag
    Copyright   : (c) 2007 Martijn Schrage
    License     : All Rights Reserved

    Maintainer  : martijn@cs.uu.nl
    Stability   : experimental
    Portability : 
-}
-----------------------------------------------------------------------------------------
{
import PresTypes
import List
}

DATA Layout
  | EmptyP      id : IDP
  | StringP     id : IDP text : String
  | ImageP      id : IDP src : String style : ImgStyle
  | PolyP       id : IDP pointList : {[ (Float, Float) ]} lineWidth : Int style : Style
  | RectangleP  id : IDP w, h : Int lineWidth : Int style : Style
  | EllipseP	id : IDP w, h : Int lineWidth : Int style : Style
  | RowP        id : IDP hRefNr : Int                       presentationList : LayoutList
  | ColP        id : IDP vRefNr : Int formatted : Formatted presentationList : LayoutList
  | OverlayP    id : IDP                                    presentationList : LayoutList
  | GraphP      id : IDP d : Dirty w,h : Int edges : {[(Int,Int)]} presentationList : LayoutList 
  | VertexP     id : IDP i,x,y: Int outline : Outline child : Layout
  | FormatterP  id : IDP presentationList : LayoutList
  | WithP       attrRule : AttrRule  child : Layout
  | StructuralP id : IDP child : Layout
  | ParsingP    id : IDP lexer : Lexer child : Layout
  | LocatorP location : {node} child : Layout
  | ArrangedP

TYPE LayoutList = [Layout]


ATTR Layout LayoutList [ lloc : {Maybe node} | | ]

SEM Layout
  | LocatorP
      child.lloc = Just @location


ATTR Layout [ | | tokenChars : String ]

SEM Layout
  | StringP
      lhs.tokenChars = @text

  | RowP
      lhs.tokenChars = concat @presentationList.tokenCharss
  | ColP
      lhs.tokenChars = concat $ intersperse "\n" @presentationList.tokenCharss
  | OverlayP
      lhs.tokenChars = head @presentationList.tokenCharss
  | FormatterP -- maybe add a '\n'?
      lhs.tokenChars = concat $ intersperse " " @presentationList.tokenCharss
  | WithP
      lhs.tokenChars = @child.tokenChars
  | ParsingP
      lhs.tokenChars = @child.tokenChars
  | LocatorP
      lhs.tokenChars = @child.tokenChars
  | StructuralP
      lhs.tokenChars = "" -- ignored for now
  | EmptyP ImageP PolyP RectangleP EllipseP VertexP GraphP ArrangedP
      lhs.tokenChars = "" -- should these cause creation of new token. Or maybe count as a space? or some special character?
      
ATTR LayoutList [ | | tokenCharss : {[String]} ]

SEM LayoutList
  | Nil
      lhs.tokenCharss = []
  | Cons
      lhs.tokenCharss = @hd.tokenChars : @tl.tokenCharss
      